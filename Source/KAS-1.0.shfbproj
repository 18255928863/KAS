<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <!--The configuration and platform will be used to determine which
assemblies to include from solution and project documentation
sources-->
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{c8d4b916-0082-4872-af7f-153add78eb29}</ProjectGuid>
    <SHFBSchemaVersion>2015.6.5.0</SHFBSchemaVersion>
    <AssemblyName>Documentation</AssemblyName>
    <RootNamespace>Documentation</RootNamespace>
    <Name>Documentation</Name>
    <OutputPath>..\docs\APIv1\</OutputPath>
    <HtmlHelpName>Documentation</HtmlHelpName>
    <DocumentationSources>
      <DocumentationSource sourceFile="KAS-1.0.csproj" />
      <DocumentationSource sourceFile="..\Binaries\KSPDev_Utils.xml" />
      <DocumentationSource sourceFile="Q:\KSP_Data\Managed\Assembly-CSharp.xml" />
      <DocumentationSource sourceFile="Q:\KSP_Data\Managed\UnityEngine.xml" />
    </DocumentationSources>
    <HelpFileVersion>1.0.0.0</HelpFileVersion>
    <MaximumGroupParts>2</MaximumGroupParts>
    <NamespaceGrouping>False</NamespaceGrouping>
    <SyntaxFilters>C#</SyntaxFilters>
    <SdkLinkTarget>Blank</SdkLinkTarget>
    <RootNamespaceContainer>False</RootNamespaceContainer>
    <PresentationStyle>VS2013</PresentationStyle>
    <Preliminary>False</Preliminary>
    <NamingMethod>MemberName</NamingMethod>
    <Language>en-US</Language>
    <HelpTitle>KAS API v1.0</HelpTitle>
    <ContentPlacement>AboveNamespaces</ContentPlacement>
    <BuildAssemblerVerbosity>OnlyWarningsAndErrors</BuildAssemblerVerbosity>
    <HelpFileFormat>Website</HelpFileFormat>
    <IndentHtml>False</IndentHtml>
    <FrameworkVersion>.NET Framework 3.5</FrameworkVersion>
    <KeepLogFile>True</KeepLogFile>
    <DisableCodeBlockComponent>False</DisableCodeBlockComponent>
    <CleanIntermediates>True</CleanIntermediates>
    <FeedbackEMailAddress>igor.zavoychinskiy%40gmail.com</FeedbackEMailAddress>
    <CopyrightText>Public Domain</CopyrightText>
    <CopyrightHref>http://unlicense.org/</CopyrightHref>
    <VisibleItems>Attributes, ExplicitInterfaceImplementations, Protected, ProtectedInternalAsProtected, PublicCompilerGenerated</VisibleItems>
    <WarnOnMissingSourceContext>False</WarnOnMissingSourceContext>
    <ComponentConfigurations>
      <ComponentConfig id="API Token Resolution" enabled="True">
        <component id="API Token Resolution">{@TokenFiles}
<replace elements="/*//token" item="string(.)" /></component>
      </ComponentConfig>
      <ComponentConfig id="Code Block Component" enabled="True">
        <component id="Code Block Component">
          <basePath value="{@HtmlEncProjectFolder}" />
          <outputPaths>{@HelpFormatOutputPaths}</outputPaths>
          <allowMissingSource value="false" />
          <removeRegionMarkers value="false" />
          <colorizer syntaxFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.xml" styleFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.xsl" stylesheet="{@SHFBFolder}PresentationStyles\Colorizer\highlight.css" scriptFile="{@SHFBFolder}PresentationStyles\Colorizer\highlight.js" disabled="{@DisableCodeBlockComponent}" language="cs" tabSize="0" numberLines="true" outlining="false" keepSeeTags="true" defaultTitle="true" />
        </component>
      </ComponentConfig>
    </ComponentConfigurations>
    <SourceCodeBasePath>.\</SourceCodeBasePath>
    <SaveComponentCacheCapacity>100</SaveComponentCacheCapacity>
    <TransformComponentArguments>
      <Argument Key="logoFile" Value="" />
      <Argument Key="logoHeight" Value="" />
      <Argument Key="logoWidth" Value="" />
      <Argument Key="logoAltText" Value="" />
      <Argument Key="logoPlacement" Value="left" />
      <Argument Key="logoAlignment" Value="left" />
      <Argument Key="maxVersionParts" Value="" />
      <Argument Key="defaultLanguage" Value="cs" />
      <Argument Key="includeEnumValues" Value="true" />
      <Argument Key="baseSourceCodeUrl" Value="https://github.com/KospY/KAS/tree/KAS-v1.0/Source/" />
      <Argument Key="requestExampleUrl" Value="https://github.com/KospY/KAS/issues/new" />
    </TransformComponentArguments>
    <NamespaceSummaries>
      <NamespaceSummaryItem name="KAS" isDocumented="True">&lt;para&gt;Main namespace for KAS functionality &lt;i&gt;implementations&lt;/i&gt;.&lt;/para&gt;
&lt;para&gt;Third-party code usually don't need to access anything in this namespace. The only legitimate exception is writing a module that inherits a KAS module. In all other cases third-party code must use &lt;see cref="N:KASAPIv1"&gt;KAS API&lt;/see&gt; to interact with KAS modules.&lt;/para&gt;
&lt;para&gt;If inheriting is the case then depedent mod must include reference to &lt;c&gt;KAS.dll&lt;/c&gt; assembly. Though, this assembly must not be released with the mod. Having two KAS assemblies in the game may badly break it.&lt;/para&gt;</NamespaceSummaryItem>
      <NamespaceSummaryItem name="KASAPIv1" isDocumented="True">&lt;para&gt;KAS API namespace. Almost always third-party code wants using types and interfaces from this namespace instead of anything else.&lt;/para&gt;
&lt;para&gt;Each API release has a version. Once API is released to the public its methods cannot be changed. In case of new functionality is relased a new version (and namespace) will be created. The old namespace will not be removed, so mods built with the old version will continue working. Though, it's a good idea to periodically migrate to the higher versions since eventually the old versions will get deprected.&lt;/para&gt;
&lt;para&gt;If API is needed the depedent mod should only include reference to &lt;c&gt;KAS-API-v1.dll&lt;/c&gt; (version number may vary). This assembly version never changes, so the dependency will never break. It's OK to provide API assembly with the mod since multliple API assemblies will not conflict with each other. Moreover, having "own" copy of the API ensures the mod will load even if no KAS is installed in the game. There is an ability to check if KAS is installed in run-time (see example below).&lt;/para&gt;
&lt;example&gt;
&lt;i&gt;Never&lt;/i&gt; access KAS modules directly since their implementations change without warning:
&lt;code&gt;&lt;![CDATA[	
public class MyModule : PartModule {
  // A WRONG way to use KAS.
  // Never depend on implementations unless you have to.
  public void WrongSample() {
    var sourceModule = part.GetComponent&lt;KAS.KASModuleLinkSourceBase&gt;();
  }
}
]]&gt;&lt;/code&gt;
Always use API interfaces, they are clearly defined and never change once released.
&lt;code&gt;&lt;![CDATA[	
using KASAPIv1;

public class MyModule : PartModule {
  // The RIGHT way to use KAS.
  // Always use interfaces and proxies.
  public void RightSample() {
    var source = part.FindModuleImplementing&lt;ILinkSource&gt;();
    if (KASAPI.isLoaded) {
      var model = KASAPI.LinkUtils.DecoupleParts(part, part.parent);
    } else {
      Debug.LogWarning("KAS is not installed");
    }
  }
}
]]&gt;&lt;/code&gt;
&lt;/example&gt;</NamespaceSummaryItem>
    </NamespaceSummaries>
  </PropertyGroup>
  <!--There are no properties for these groups.  AnyCPU needs to appear in
order for Visual Studio to perform the build.  The others are optional
common platform types that may appear.-->
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x86' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x86' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|x64' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|x64' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|Win32' " />
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|Win32' " />
  <ItemGroup>
    <Reference Include="Assembly-CSharp">
      <HintPath>bin\Release\Assembly-CSharp.dll</HintPath>
    </Reference>
    <Reference Include="Assembly-CSharp-firstpass">
      <HintPath>bin\Release\Assembly-CSharp-firstpass.dll</HintPath>
    </Reference>
    <Reference Include="KSPAssets">
      <HintPath>bin\Release\KSPAssets.dll</HintPath>
    </Reference>
    <Reference Include="KSPDev_Utils">
      <HintPath>bin\Release\KSPDev_Utils.dll</HintPath>
    </Reference>
    <Reference Include="KSPUtil">
      <HintPath>bin\Release\KSPUtil.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Cecil">
      <HintPath>bin\Release\Mono.Cecil.dll</HintPath>
    </Reference>
    <Reference Include="Mono.Security">
      <HintPath>bin\Release\Mono.Security.dll</HintPath>
    </Reference>
    <Reference Include="SaveUpgradePipeline.Core">
      <HintPath>bin\Release\SaveUpgradePipeline.Core.dll</HintPath>
    </Reference>
    <Reference Include="System">
      <HintPath>bin\Release\System.dll</HintPath>
    </Reference>
    <Reference Include="System.Xml">
      <HintPath>bin\Release\System.Xml.dll</HintPath>
    </Reference>
    <Reference Include="TDx.TDxInput">
      <HintPath>bin\Release\TDx.TDxInput.dll</HintPath>
    </Reference>
    <Reference Include="TrackIRUnity">
      <HintPath>bin\Release\TrackIRUnity.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine">
      <HintPath>bin\Release\UnityEngine.dll</HintPath>
    </Reference>
    <Reference Include="UnityEngine.UI">
      <HintPath>bin\Release\UnityEngine.UI.dll</HintPath>
    </Reference>
    <Reference Include="Vectrosity">
      <HintPath>bin\Release\Vectrosity.dll</HintPath>
    </Reference>
  </ItemGroup>
  <!--Import the SHFB build targets-->
  <Import Project="$(SHFBROOT)\SandcastleHelpFileBuilder.targets" />
</Project>
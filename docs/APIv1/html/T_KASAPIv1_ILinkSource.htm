<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>ILinkSource Interface</title><meta name="Language" content="en-us" /><meta name="System.Keywords" content="ILinkSource interface" /><meta name="System.Keywords" content="KASAPIv1.ILinkSource interface" /><meta name="System.Keywords" content="ILinkSource interface, about ILinkSource interface" /><meta name="Microsoft.Help.F1" content="KASAPIv1.ILinkSource" /><meta name="Microsoft.Help.Id" content="T:KASAPIv1.ILinkSource" /><meta name="Description" content="A generic source of a KAS link between two parts." /><meta name="Microsoft.Help.ContentType" content="Reference" /><meta name="BrandingAware" content="true" /><meta name="container" content="KASAPIv1" /><meta name="file" content="T_KASAPIv1_ILinkSource" /><meta name="guid" content="T_KASAPIv1_ILinkSource" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-1.11.0.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">KAS API v1<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_KAS.htm" title="KAS API v1" tocid="roottoc">KAS API v1</a></div><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="N_KASAPIv1.htm" title="KASAPIv1" tocid="N_KASAPIv1">KASAPIv1</a></div><div class="toclevel1 current" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="T_KASAPIv1_ILinkSource.htm" title="ILinkSource Interface" tocid="T_KASAPIv1_ILinkSource">ILinkSource Interface</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Properties_T_KASAPIv1_ILinkSource.htm" title="ILinkSource Properties" tocid="Properties_T_KASAPIv1_ILinkSource">ILinkSource Properties</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="Methods_T_KASAPIv1_ILinkSource.htm" title="ILinkSource Methods" tocid="Methods_T_KASAPIv1_ILinkSource">ILinkSource Methods</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/KAS-logo.png" /></td><td class="titleColumn"><h1>ILinkSource Interface</h1></td></tr></table><span class="introStyle"></span> <div class="summary">A generic source of a KAS link between two parts.</div><p> </p>
    <strong>Namespace:</strong> 
   <a href="N_KASAPIv1.htm">KASAPIv1</a><br />
    <strong>Assembly:</strong>
   KAS-1.0 (in KAS-1.0.dll) Version: 0.7.3 (KAS 1.0 BETA) for KSP 1.2<div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Syntax</span></div><div id="ID1RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EACA_tab1" class="codeSnippetContainerTabSingle">C#</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EACA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EACA');return false;" title="Copy">Copy</a></div></div><div id="ID0EACA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="keyword">public</span> <span class="keyword">interface</span> <span class="identifier">ILinkSource</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EACA");</script><a id="HT_RequestExampleLink" href="https://github.com/ihsoft/KAS/issues/new" target="_blank" class="button" title="Request an example for this topic">Request Example</a>
		<script type="text/javascript">
		var HT_requestExampleLink = document.getElementById("HT_RequestExampleLink");
		var HT_requestExampleLinkText = HT_requestExampleLink.innerHTML;
				
		if(HT_requestExampleLink.href.substring(0, 4).toLowerCase() == "http")
			HT_requestExampleLink.href += "?title=";
		else
			HT_requestExampleLink.href += "?subject=KAS API v1: ";

		HT_requestExampleLink.href += "Add an Example for " + encodeURIComponent(document.title) + "&amp;body=" +
			encodeURIComponent("Please add an example for " + document.title + ".%0D%0DTODO (optional): Describe a specific " +
			"scenario you would like to see addressed.%0D%0DHelp Topic: " + window.location.href).replace(/%250D/g, "%0D");
		HT_requestExampleLink.innerHTML = HT_requestExampleLinkText;
		</script><a target="_blank" class="button" href="https://github.com/ihsoft/KAS/tree/KAS-v1.0/Source/api_v1/ILinkSource.cs" title="View the source code">View Source</a></div><p>The <span class="selflink">ILinkSource</span> type exposes the following members.</p><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Properties</span></div><div id="ID2RBSection" class="collapsibleSection"><table class="members" id="propertyList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_attachNode.htm">attachNode</a></td><td><div class="summary">Attach node used for linking with the target part.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_cfgAttachNodeName.htm">cfgAttachNodeName</a></td><td><div class="summary">Name of the attach node to connect with.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_cfgLinkMode.htm">cfgLinkMode</a></td><td><div class="summary">Defines the link's effect on the vessel(s) hierarchy.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_cfgLinkRendererName.htm">cfgLinkRendererName</a></td><td><div class="summary">Name of the renderer that draws the link.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_cfgLinkType.htm">cfgLinkType</a></td><td><div class="summary">Source link type identifier.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_guiLinkMode.htm">guiLinkMode</a></td><td><div class="summary">Mode in which the link between source and target is created.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_isLocked.htm">isLocked</a></td><td><div class="summary">Defines if the source can initiate a link.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_linkState.htm">linkState</a></td><td><div class="summary">Current state of the source.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_linkTarget.htm">linkTarget</a></td><td><div class="summary">Target of the link.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_linkTargetPartId.htm">linkTargetPartId</a></td><td><div class="summary">ID of the linked target part.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_nodeTransform.htm">nodeTransform</a></td><td><div class="summary">Transform that defines the position and orientation of the attach node.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubproperty.gif" alt="Public property" title="Public property" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="P_KASAPIv1_ILinkSource_part.htm">part</a></td><td><div class="summary">Part that owns the source.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Methods</span></div><div id="ID3RBSection" class="collapsibleSection"><table class="members" id="methodList"><tr><th class="iconColumn">
								 
							</th><th>Name</th><th>Description</th></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_KASAPIv1_ILinkSource_BreakCurrentLink.htm">BreakCurrentLink</a></td><td><div class="summary">Breaks the link between the source and target.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_KASAPIv1_ILinkSource_CancelLinking.htm">CancelLinking</a></td><td><div class="summary">Cancels linking mode without creating a link.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_KASAPIv1_ILinkSource_CheckCanLinkTo.htm">CheckCanLinkTo</a></td><td><div class="summary">Verifies if a link between the parts can be successful.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_KASAPIv1_ILinkSource_LinkToTarget.htm">LinkToTarget</a></td><td><div class="summary">Establishes a link between two parts.</div></td></tr><tr data="public;declared;notNetfw;"><td><img src="../icons/pubmethod.gif" alt="Public method" title="Public method" /><img src="../icons/CodeExample.png" alt="Code example" title="Code example" /></td><td><a href="M_KASAPIv1_ILinkSource_StartLinking.htm">StartLinking</a></td><td><div class="summary">Starts linking mode of this source.</div></td></tr></table><a href="#PageHeader">Top</a></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID4RB')" onkeypress="SectionExpandCollapse_CheckKey('ID4RB', event)" tabindex="0"><img id="ID4RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Remarks</span></div><div id="ID4RBSection" class="collapsibleSection"><p>
            Source is the initiator of the link to the another part. It holds all the logic on making and
            maintaining the actual connection between two parts. The other end of the connection must be
            <a href="T_KASAPIv1_ILinkTarget.htm">ILinkTarget</a> which implements its own piece of the logic.
            </p><p>
            The link source have a state that defines what it can do (<a href="P_KASAPIv1_ILinkSource_linkState.htm">linkState</a>). Not all
            actions are allowed in any state. E.g. in order to link the source to a target the source must
            be in state <a href="T_KASAPIv1_LinkState.htm">Linking</a>, it will refuse connecting in the other state.
            </p><p>
            A physical joint between the parts is determined by the <a href="P_KASAPIv1_ILinkSource_cfgLinkMode.htm">cfgLinkMode</a>. It's a static
            settings of the part, so one source module can only link in one mode. If the part needs to link
            in different modes it must implement multiple modules: one per mode.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID5RB')" onkeypress="SectionExpandCollapse_CheckKey('ID5RB', event)" tabindex="0"><img id="ID5RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID5RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAFBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAFBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAFBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-comment">// Connects two parts assuming the source and the target parts own exactly one link module. </span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">bool</span> ConnectParts(Part srcPart, Part tgtPart) {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">var</span> source = srcPart.FindModuleImplementing&lt;ILinkSource&gt;();
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">var</span> target = tgtPart.FindModuleImplementing&lt;ILinkTarget&gt;();
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">if</span> (source == <span class="highlight-keyword">null</span> || target == <span class="highlight-keyword">null</span> || source.cfgLinkType != target.cfgLinkType) {
<span class="highlight-spacerShort"></span>    Debug.LogError(<span class="highlight-literal">"Source and target cannot link"</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>;
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">// GUILinkMode.API mode tells the implementation to not execute any user facing effects on the</span>
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">// link. See GUILinkMode for more details. </span>
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">if</span> (!source.StartLinking(GUILinkMode.API) || !source.LinkToTarget(target)) {
<span class="highlight-spacerShort"></span>    Debug.LogError(<span class="highlight-literal">"Linking failed"</span>);
<span class="highlight-spacerShort"></span>    source.CancelLinking();
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-keyword">false</span>;
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>  Debug.LogFormat(<span class="highlight-literal">"Established link with part: id={0}, mode={1}"</span>,
<span class="highlight-spacerShort"></span>                  source.linkTargetPartId, source.cfgLinkMode);
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">return</span> <span class="highlight-keyword">true</span>;
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAFBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID6RB')" onkeypress="SectionExpandCollapse_CheckKey('ID6RB', event)" tabindex="0"><img id="ID6RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID6RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAEBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAEBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAEBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-comment">// Disconnects the source part from its target. Only once source can be connected on the part.</span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// And it can be connected to the exactly one target.</span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> DisconnectParts(Part srcPart) {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">var</span> source = srcPart.FindModulesImplementing&lt;ILinkSource&gt;()
<span class="highlight-spacerShort"></span>      .FirstOrDefault(s =&gt; s.linkTarget != <span class="highlight-keyword">null</span>);
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">if</span> (source == <span class="highlight-keyword">null</span>) {
<span class="highlight-spacerShort"></span>    Debug.LogWarningFormat(<span class="highlight-literal">"Part is not connected to anything"</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span>;
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">// LinkActorType.API tells the implementation to not execute any user facing effects on the</span>
<span class="highlight-spacerShort"></span>  <span class="highlight-comment">// link. See LinkActorType for more details.</span>
<span class="highlight-spacerShort"></span>  source.BreakCurrentLink(LinkActorType.API);
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAEBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID7RB')" onkeypress="SectionExpandCollapse_CheckKey('ID7RB', event)" tabindex="0"><img id="ID7RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID7RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAADBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAADBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAADBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-comment">// Returns the linked part of the source, if any. It assumes there is exactly one source module</span>
<span class="highlight-spacerShort"></span><span class="highlight-comment">// on the source part.</span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> Part FindTargetFromSource(Part srcPart) {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">var</span> source = srcPart.FindModulesImplementing&lt;ILinkSource&gt;()
<span class="highlight-spacerShort"></span>      .FirstOrDefault(s =&gt; s.linkTarget != <span class="highlight-keyword">null</span>);
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">if</span> (source == <span class="highlight-keyword">null</span>) {
<span class="highlight-spacerShort"></span>    Debug.Log(<span class="highlight-literal">"Source is not connected"</span>);
<span class="highlight-spacerShort"></span>    <span class="highlight-keyword">return</span> <span class="highlight-keyword">null</span>;
<span class="highlight-spacerShort"></span>  }
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">return</span> source.linkTarget.part;
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAADBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID8RB')" onkeypress="SectionExpandCollapse_CheckKey('ID8RB', event)" tabindex="0"><img id="ID8RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID8RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAACBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAACBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAACBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-comment">// Returns a source module given an attach node name.</span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> ILinkSource FindSourceByAttachNode(Part srcPart, <span class="highlight-keyword">string</span> srcNodeName) {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">return</span> srcPart.FindModulesImplementing&lt;ILinkSource&gt;()
<span class="highlight-spacerShort"></span>      .FirstOrDefault(s =&gt; s.cfgAttachNodeName == srcNodeName);
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAACBA");</script></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID9RB')" onkeypress="SectionExpandCollapse_CheckKey('ID9RB', event)" tabindex="0"><img id="ID9RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID9RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABBBA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABBBA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABBBA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-comment">// Checks if the two parts are connected via a KAS link. </span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">bool</span> CheckIfConnected(Part srcPart, Part tgtPart) {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">return</span> srcPart.FindModulesImplementing&lt;ILinkSource&gt;()
<span class="highlight-spacerShort"></span>      .Any(s =&gt; s.linkTarget != <span class="highlight-keyword">null</span> &amp;&amp; s.linkTarget.part == tgtPart);
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABBBA");</script><p>
            Note, that if you only need to know if the two parts are connected in terms of the game logic,
            you don't need to deal with the KAS modules. For the game the parts connected via KAS are no
            different from the ones conected in the editor or via the docking nodes.
            </p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID10RB')" onkeypress="SectionExpandCollapse_CheckKey('ID10RB', event)" tabindex="0"><img id="ID10RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Examples</span></div><div id="ID10RBSection" class="collapsibleSection"><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-spacerShort"></span><span class="highlight-comment">// Sets up a sample state machine for the source states.</span>
<span class="highlight-spacerShort"></span><span class="highlight-keyword">public</span> <span class="highlight-keyword">static</span> <span class="highlight-keyword">void</span> SetupSourceStateModel() {
<span class="highlight-spacerShort"></span>  <span class="highlight-keyword">var</span> linkStateMachine = <span class="highlight-keyword">new</span> SimpleStateMachine&lt;LinkState&gt;(<span class="highlight-keyword">true</span> <span class="highlight-comment">/* strict */</span>);
<span class="highlight-spacerShort"></span>  linkStateMachine.SetTransitionConstraint(
<span class="highlight-spacerShort"></span>      LinkState.Available,
<span class="highlight-spacerShort"></span>      <span class="highlight-keyword">new</span>[] {LinkState.Linking, LinkState.RejectingLinks});
<span class="highlight-spacerShort"></span>  linkStateMachine.SetTransitionConstraint(
<span class="highlight-spacerShort"></span>      LinkState.Linking,
<span class="highlight-spacerShort"></span>      <span class="highlight-keyword">new</span>[] {LinkState.Available, LinkState.Linked});
<span class="highlight-spacerShort"></span>  linkStateMachine.SetTransitionConstraint(
<span class="highlight-spacerShort"></span>      LinkState.Linked,
<span class="highlight-spacerShort"></span>      <span class="highlight-keyword">new</span>[] {LinkState.Available});
<span class="highlight-spacerShort"></span>  linkStateMachine.SetTransitionConstraint(
<span class="highlight-spacerShort"></span>      LinkState.Locked,
<span class="highlight-spacerShort"></span>      <span class="highlight-keyword">new</span>[] {LinkState.Available});
<span class="highlight-spacerShort"></span>  linkStateMachine.SetTransitionConstraint(
<span class="highlight-spacerShort"></span>      LinkState.RejectingLinks,
<span class="highlight-spacerShort"></span>      <span class="highlight-keyword">new</span>[] {LinkState.Available, LinkState.Locked});
<span class="highlight-spacerShort"></span>
<span class="highlight-spacerShort"></span>  linkStateMachine.AddStateHandlers(
<span class="highlight-spacerShort"></span>      LinkState.Available,
<span class="highlight-spacerShort"></span>      enterHandler: x =&gt; Debug.Log(<span class="highlight-literal">"Source is available"</span>),
<span class="highlight-spacerShort"></span>      leaveHandler: x =&gt; Debug.Log(<span class="highlight-literal">"Source is NOT available"</span>));
<span class="highlight-spacerShort"></span>}</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABA");</script></div><div class="collapsibleAreaRegion" id="seeAlsoSection"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID11RB')" onkeypress="SectionExpandCollapse_CheckKey('ID11RB', event)" tabindex="0"><img id="ID11RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />See Also</span></div><div id="ID11RBSection" class="collapsibleSection"><h4 class="subHeading">Reference</h4><div class="seeAlsoStyle"><a href="N_KASAPIv1.htm">KASAPIv1 Namespace</a></div></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://unlicense.org/" target="_blank">Public Domain</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:igor.zavoychinskiy%40gmail.com?Subject=KAS API v1">igor.zavoychinskiy@gmail.com</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script> </div></body></html>